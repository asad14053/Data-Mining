#ENGR 8990
import math
def det3(a):
    det = 0
    for i in range(3):
        item1 = a[0][i]
        item2 = a[0][i]
        for j in range(1,3):
            k1 = i+j
            k2 = i-j
            if k1 > 2:
                k1-=3
            if k2 < 0:
                k2+=3
            item1 *=a[j][k1]
            item2 *=a[j][k2]
        det += item1 - item2
    return det
def det4(a):
    det = 0
    for i in range(4):
        b = [[0]*3 for j in range(3)]
        for j in range(3):
            if j >= i:
                b[0][j] = a[1][j+1]
                b[1][j] = a[2][j+1]
                b[2][j] = a[3][j+1]
            else:
                b[0][j] = a[1][j]
                b[1][j] = a[2][j]
                b[2][j] = a[3][j]
        print('note1')
        print(a[0][i])

        det += (-1) ** i * a[0][i]* det3(b)
    return det
def demonstrate(a,n):
    for i in range(n):
        for j in range(n):
            print(a[i][j],end=" ")
        print()
def demonstrate_a(a,n):
    for i in range(n):
        for j in range(n+1):
            print(a[i][j],end=" ")
        print()
def LU(a,n,x):
    u = [[0]*3 for i in range(3)]
    l = [[0]*3 for i in range(3)]
    l[0][0] = 1
    l[1][1] = 1
    l[2][2] = 1
    u[0][0] = a[0][0]
    u[0][1] = a[0][1]
    u[0][2] = a[0][2]
    l[1][0] = a[1][0]/u[0][0]
    u[1][1] = a[1][1]-l[1][0]*u[0][1]
    u[1][2] = a[1][2]-l[1][0]*u[0][2]
    print('check:',u[1][2],a[1][2],l[1][0],u[0][2])
    l[2][0] = a[2][0]/u[0][0]
    l[2][1] = (a[2][1]-l[2][0]*u[0][1])/u[1][1]
    u[2][2] = a[2][2]-l[2][0]*u[0][2]-l[2][1]*u[1][2]
    print(det3(l),det3(u))
    print('l:')
    demonstrate(l,3)
    print('u:')
    demonstrate(u,3)
    #z
    z = [0,0,0]
    z[0] = a[0][3]
    z[1] = a[1][3]-l[1][0]*z[0]
    z[2] = a[2][3]-l[2][0]*z[0] - l[2][1]*z[1]
    #x
    print(z)
    x[2] = z[2]/u[2][2]
    x[1] = (z[1]-u[1][2]*x[2])/u[1][1]
    x[0] = (z[0]-u[0][1]*x[1]-u[0][2]*x[2])/u[0][0]
    print(x)

def guass(a,n,x): #
    #forward elimination
    for i in range(1,n):
        for j in range(i):
            r = a[i][j]/a[j][j]
            for k in range(n+1):
                a[i][k] -= r*a[j][k]
    demonstrate(a, n)
    #check point : determinant
    if n == 3:
        det = det3(a)
    elif n == 4:
        det = det4(a)
    if det == 0:
        print('There will be more than 1 solution.')
        return det
    #backward guass
    for i in range(n-2,-1,-1):
        for j in range(i+1,n):
            r = a[i][j] / a[j][j]
            for k in range(n+1):
                a[i][k] -=a[j][k]*r
    demonstrate(a,n)
    for i in range(n):
        x[i] = a[i][n]/a[i][i]
    print(x)
def main():
    n = int(input('How many equations do we have? '))
    a = [[0]*(n+1) for i in range(n)]
    # for i in range(n):
    #     for j in range(n):
    #         s = 'please input a['+str(i+1)+']['+str(j+1)+']: '
    #         a[i][j] = float(input(s))
    # for i in range(n):
    #     s = 'please input b['+str(i+1)+']: '
    #     a[i][n] = float(input(s))
    a = [[-1,1,2,2],[3,-1,1,6],[-1,3,4,4]] #[[1,4,2,3,1],[0,1,4,4,1],[-1,0,1,0,1],[2,0,4,1,1]]
    demonstrate_a(a,n)
    x = [0]*n
    if n == 3:
        print('det = ',det3(a))
    elif n == 4:
        print('det = ',det4(a))
    x = [0,0,0]
    #guass(a,n,x)
    LU(a,n,x)

if __name__ == '__main__':
    main()

